syntax = "proto3";

package database;

import "Types.proto";
import "Req.proto";

option go_package = "github.com/DEEBBLUE/ExProtos/api/Database";

service Database{
//User
  rpc CreateUser(CreateUserReq)
    returns (req.DefaultRes);
  rpc RepeatUser(RepeatUserReq)
    returns (RepeatUserRes);
  rpc ChangeRoleUser(ChangeRoleUserReq)
    returns (req.DefaultRes);
  rpc ChangeVerifeStatusUser(ChangeVerifeStatusUserReq)
    returns (req.DefaultRes);
  rpc ChangeBalanceUser(ChangeBalanceUserReq)
    returns (req.DefaultRes);

//Change
  rpc CreateExchange(req.CreateExchangeReq)
    returns (req.DefaultRes);
  rpc RepeatExchange(req.RepeatExchangeReq)
    returns (req.RepeatExchangeRes);
  rpc InitOperExchange(req.InitOperExchangeReq)
    returns (req.DefaultRes);
  rpc InitBankDetailExchange(req.InitBankDetailExchangeReq)
    returns (req.DefaultRes);
  rpc ChangeStatusExchange(req.ChangeStatusExchangeReq)
    returns (req.DefaultRes);

//Searching 
  rpc RepeatUserHistory(RepeatUserHistoryReq)
    returns (RepeatUserHistoryRes);
}


// USER
// User: hanlders type
message CreateUserReq{
  int32 tg_id = 1;
  int32 owner = 2;
}
message RepeatUserReq{
  int32 tg_id = 1;
}
message RepeatUserRes{
  string status = 1;
  types.User user = 2;
}
message ChangeRoleUserReq{
  int32 tg_id = 1;
  types.Role new_role = 2; 
}
message ChangeVerifeStatusUserReq{
  int32 tg_id = 1;
  types.Verif new_verif = 2; 
}
message ChangeBalanceUserReq{
  int32 tg_id = 1;
  int32 new_balance = 2; 
}

//EXCHANGE
//Exchange: Message
/*
message CreateExchangeReq{
  int32 client_id = 1;
  types.ExchangeData data_in = 2;
  types.ExchangeData data_out = 3;
  float rate = 4;
}
message RepeatExchangeReq{
  int32 exchange_id = 1;
}
message RepeatExchangeRes{
  string status = 1;
  types.Exchange exchange = 2;
}
message InitOperExchangeReq{
  int32 exchange_id = 1;
  int32 oper_id = 2;
}
message InitBankDetailExchangeReq{
  int32 exchange_id = 1;
  string bank_detail = 2;
}
message ChangeStatusExchangeReq{
  int32 exchange_id = 1;
  types.ExchangeStatus new_status = 2;
}
*/
message RepeatUserHistoryReq{
  int32 user_id = 1;
  oneof amount_changes{
    int32 count = 2;
    string full = 3;
  }
}

message RepeatUserHistoryRes{
  repeated types.Exchange history_list = 1;
}
